"""14032025 change department

Revision ID: e05b6a07af22
Revises: 6e76c0953ed9
Create Date: 2025-03-14 15:56:40.193605

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'e05b6a07af22'
down_revision: Union[str, None] = '6e76c0953ed9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('department',
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_department_id'), 'department', ['id'], unique=False)
    op.create_table('department_doc_type',
    sa.Column('doc_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('department_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_type.id'], ),
    sa.PrimaryKeyConstraint('doc_type_id', 'department_id')
    )
    op.drop_constraint('memo_outgoing_to_departement_id_fkey', 'memo', type_='foreignkey')
    op.drop_column('memo', 'outgoing_to_departement_id')
    op.drop_constraint('worker_departement_id_fkey', 'worker', type_='foreignkey')
    op.drop_column('worker', 'departement_id')
    op.drop_table('departement_doc_type')
    op.drop_index('ix_departement_id', table_name='departement')
    op.drop_table('departement')
    op.add_column('memo', sa.Column('outgoing_to_department_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_foreign_key(None, 'memo', 'department', ['outgoing_to_department_id'], ['id'])
    op.add_column('worker', sa.Column('department_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column('worker', 'client_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    
    op.create_foreign_key(None, 'worker', 'department', ['department_id'], ['id'])
   
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('worker', sa.Column('departement_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'worker', type_='foreignkey')
    op.create_foreign_key('worker_departement_id_fkey', 'worker', 'departement', ['departement_id'], ['id'])
    op.alter_column('worker', 'client_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('worker', 'department_id')
    op.add_column('memo', sa.Column('outgoing_to_departement_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'memo', type_='foreignkey')
    op.create_foreign_key('memo_outgoing_to_departement_id_fkey', 'memo', 'departement', ['outgoing_to_departement_id'], ['id'])
    op.drop_column('memo', 'outgoing_to_department_id')
    op.create_table('departement',
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='departement_pkey'),
    sa.UniqueConstraint('code', name='departement_code_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_departement_id', 'departement', ['id'], unique=False)
    op.create_table('departement_doc_type',
    sa.Column('doc_type_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('departement_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['departement_id'], ['departement.id'], name='departement_doc_type_departement_id_fkey'),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_type.id'], name='departement_doc_type_doc_type_id_fkey')
    )
    op.drop_table('department_doc_type')
    op.drop_index(op.f('ix_department_id'), table_name='department')
    op.drop_table('department')
    # ### end Alembic commands ###
