"""08042025 set unique name on doctype and department

Revision ID: 26094c9632eb
Revises: 451dc7ff258c
Create Date: 2025-04-08 11:41:00.012177

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '26094c9632eb'
down_revision: Union[str, None] = '451dc7ff258c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('department', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'department', ['name'])
    op.alter_column('doc_type', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'doc_type', ['name'])
    op.add_column('memo', sa.Column('workflow_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_foreign_key(None, 'memo', 'workflow', ['workflow_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'memo', type_='foreignkey')
    op.drop_column('memo', 'workflow_id')
    op.drop_constraint(None, 'doc_type', type_='unique')
    op.alter_column('doc_type', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'department', type_='unique')
    op.alter_column('department', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
