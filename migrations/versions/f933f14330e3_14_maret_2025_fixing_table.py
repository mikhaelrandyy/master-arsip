"""14 Maret 2025 fixing table

Revision ID: f933f14330e3
Revises: d2e1c7016f8c
Create Date: 2025-03-14 11:25:27.016992

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'f933f14330e3'
down_revision: Union[str, None] = 'd2e1c7016f8c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('memo',
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('jenis_arsip', sa.Enum('ARSIP_HOLDING', 'ARSIP_AJB', name='jenisarsipenum'), nullable=False),
    sa.Column('doc_category', sa.Enum('MASUK', 'KELUAR', 'PINJAM', 'KEMBALI', 'MASUK_HOLD', 'HOLD', 'UNHOLD', name='documentcategoryenum'), nullable=False),
    sa.Column('doc_format_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('company_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('necessity', sa.Enum('KELUAR_KE_KONSUMEN', 'KELUAR_KE_BANK', 'PENGGABUNGAN', 'PROSES_AJB', 'CHECK_INTERNAL', 'PEMECAHAN', 'PERPANJANGAN', 'REVISI', 'PEMISAHAN', name='necessityenum'), nullable=True),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('return_date', sa.Date(), nullable=True),
    sa.Column('remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('outgoing_to_type', sa.Enum('CUSTOMER', 'BANK', 'NOTARIS', 'INTERNAL', 'TRANSFER', name='outgoingtotypeenum'), nullable=True),
    sa.Column('outgoing_to_notaris_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('outgoing_to_departement_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('outgoing_doc_type', sa.Enum('ASLI', 'COPY', 'TRANSFER', name='outgoingtodoctypeenum'), nullable=True),
    sa.Column('outgoing_to_jenis_arsip', sa.Enum('ARSIP_HOLDING', 'ARSIP_AJB', name='jenisarsipenum'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['doc_format_id'], ['doc_format.id'], ),
    sa.ForeignKeyConstraint(['outgoing_to_departement_id'], ['departement.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_memo_id'), 'memo', ['id'], unique=False)
    op.create_table('doc_archive',
    sa.Column('doc_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doc_format_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doc_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doc_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doc_archive_ref_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unit_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alashak_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('vendor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('physical_doc_type', sa.Enum('ASLI', 'DUPLIKAT', 'COPY', 'LEGALISIR', 'SALINAN', name='physicaldoctypeenum'), nullable=False),
    sa.Column('remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('jenis_arsip', sa.Enum('ARSIP_HOLDING', 'ARSIP_AJB', name='jenisarsipenum'), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'UNAVAILABLE', name='statusdocarchiveenum'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['alashak_id'], ['alashak.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['doc_format_id'], ['doc_format.id'], ),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_type.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doc_archive_id'), 'doc_archive', ['id'], unique=False)
    op.create_table('doc_archive_asal_hak',
    sa.Column('doc_archive_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('doc_archive_asal_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doc_archive_asal_id'], ['doc_archive.id'], ),
    sa.ForeignKeyConstraint(['doc_archive_id'], ['doc_archive.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doc_archive_asal_hak_id'), 'doc_archive_asal_hak', ['id'], unique=False)
    op.create_table('doc_archive_attachment',
    sa.Column('doc_archive_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doc_archive_id'], ['doc_archive.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doc_archive_attachment_id'), 'doc_archive_attachment', ['id'], unique=False)
    op.create_table('doc_archive_column',
    sa.Column('doc_archive_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('column_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['column_type_id'], ['column_type.id'], ),
    sa.ForeignKeyConstraint(['doc_archive_id'], ['doc_archive.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doc_archive_column_id'), 'doc_archive_column', ['id'], unique=False)
    op.create_table('memo_doc',
    sa.Column('memo_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('doc_archive_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doc_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('doc_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('doc_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unit_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alashak_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('physical_doc_type', sa.Enum('ASLI', 'DUPLIKAT', 'COPY', 'LEGALISIR', 'SALINAN', name='physicaldoctypeenum'), nullable=False),
    sa.Column('remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('vendor_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['alashak_id'], ['alashak.id'], ),
    sa.ForeignKeyConstraint(['doc_archive_id'], ['doc_archive.id'], ),
    sa.ForeignKeyConstraint(['memo_id'], ['memo.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memo_doc_id'), 'memo_doc', ['id'], unique=False)
    op.create_table('memo_doc_asal_hak',
    sa.Column('memo_doc_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('doc_archive_asal_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doc_archive_asal_id'], ['doc_archive.id'], ),
    sa.ForeignKeyConstraint(['memo_doc_id'], ['memo_doc.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memo_doc_asal_hak_id'), 'memo_doc_asal_hak', ['id'], unique=False)
    op.create_table('memo_doc_attachment',
    sa.Column('memo_doc_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memo_doc_id'], ['memo_doc.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memo_doc_attachment_id'), 'memo_doc_attachment', ['id'], unique=False)
    op.create_table('memo_doc_column',
    sa.Column('memo_doc_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('column_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['column_type_id'], ['column_type.id'], ),
    sa.ForeignKeyConstraint(['memo_doc_id'], ['memo_doc.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memo_doc_column_id'), 'memo_doc_column', ['id'], unique=False)
    op.add_column('doc_type_archive', sa.Column('jenis_arsip', sa.Enum('ARSIP_HOLDING', 'ARSIP_AJB', name='jenisarsipenum'), nullable=True))
    op.add_column('worker', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.alter_column('worker', 'client_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('worker', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('worker', sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.alter_column('worker', 'client_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('worker', 'is_active')
    op.drop_column('doc_type_archive', 'jenis_arsip')
    op.drop_index(op.f('ix_memo_doc_column_id'), table_name='memo_doc_column')
    op.drop_table('memo_doc_column')
    op.drop_index(op.f('ix_memo_doc_attachment_id'), table_name='memo_doc_attachment')
    op.drop_table('memo_doc_attachment')
    op.drop_index(op.f('ix_memo_doc_asal_hak_id'), table_name='memo_doc_asal_hak')
    op.drop_table('memo_doc_asal_hak')
    op.drop_index(op.f('ix_memo_doc_id'), table_name='memo_doc')
    op.drop_table('memo_doc')
    op.drop_index(op.f('ix_doc_archive_column_id'), table_name='doc_archive_column')
    op.drop_table('doc_archive_column')
    op.drop_index(op.f('ix_doc_archive_attachment_id'), table_name='doc_archive_attachment')
    op.drop_table('doc_archive_attachment')
    op.drop_index(op.f('ix_doc_archive_asal_hak_id'), table_name='doc_archive_asal_hak')
    op.drop_table('doc_archive_asal_hak')
    op.drop_index(op.f('ix_doc_archive_id'), table_name='doc_archive')
    op.drop_table('doc_archive')
    op.drop_index(op.f('ix_memo_id'), table_name='memo')
    op.drop_table('memo')
    # ### end Alembic commands ###
