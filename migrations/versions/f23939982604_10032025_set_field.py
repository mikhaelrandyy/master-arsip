"""10032025 set field

Revision ID: f23939982604
Revises: c99d305c6f02
Create Date: 2025-03-10 16:15:07.975085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'f23939982604'
down_revision: Union[str, None] = 'c99d305c6f02'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_doc_archive_column_id', table_name='doc_archive_column')
    op.drop_table('doc_archive_column')
    op.drop_index('ix_doc_archive_id', table_name='doc_archive')
    op.drop_table('doc_archive')
    op.add_column('alashak', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column('alashak', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('alashak', 'description')
    op.add_column('column_type', sa.Column('data_type', sa.Enum('ENUM', 'DATE_PICKER', 'DATE_TIME_PICKER', 'STRING', 'INTEGER', 'DECIMAL', 'BOOLEAN', name='tipedataenum'), nullable=False))
    op.alter_column('column_type', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('column_type', 'tipe_data')
    op.alter_column('departement', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('doc_format', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('doc_type_group', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('doc_type_group', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('role', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('worker', 'departement_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('worker', 'departement_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('role', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('doc_type_group', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('doc_type_group', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('doc_format', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('departement', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('column_type', sa.Column('tipe_data', postgresql.ENUM('ENUM', 'DATE_PICKER', 'DATE_TIME_PICKER', 'STRING', 'INTEGER', 'DECIMAL', 'BOOLEAN', name='tipedataenum'), autoincrement=False, nullable=True))
    op.alter_column('column_type', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('column_type', 'data_type')
    op.add_column('alashak', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('alashak', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('alashak', 'name')
    op.create_table('doc_archive',
    sa.Column('doc_type_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('doc_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_type.id'], name='doc_archive_doc_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='doc_archive_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_doc_archive_id', 'doc_archive', ['id'], unique=False)
    op.create_table('doc_archive_column',
    sa.Column('doc_archive_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('column_type_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['column_type_id'], ['column_type.id'], name='doc_archive_column_column_type_id_fkey'),
    sa.ForeignKeyConstraint(['doc_archive_id'], ['doc_archive.id'], name='doc_archive_column_doc_archive_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='doc_archive_column_pkey')
    )
    op.create_index('ix_doc_archive_column_id', 'doc_archive_column', ['id'], unique=False)
    # ### end Alembic commands ###
