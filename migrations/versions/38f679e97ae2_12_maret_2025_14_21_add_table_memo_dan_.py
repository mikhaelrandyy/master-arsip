"""12 Maret 2025 14:21 add table memo dan doc detail

Revision ID: 38f679e97ae2
Revises: cf1cd41ed820
Create Date: 2025-03-12 14:45:01.240571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '38f679e97ae2'
down_revision: Union[str, None] = 'cf1cd41ed820'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('column_type',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('data_type', sa.Enum('ENUM', 'DATE_PICKER', 'DATE_TIME_PICKER', 'STRING', 'INTEGER', 'DECIMAL', 'BOOLEAN', name='datatypeenum'), nullable=True),
    sa.Column('enum_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_mandatory', sa.Boolean(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_column_type_id'), 'column_type', ['id'], unique=False)
    op.create_table('doc_detail',
    sa.Column('doc_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unit_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nomor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tanggal', sa.Date(), nullable=True),
    sa.Column('alashak_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipe_doc_fisik', sa.Enum('ASLI', 'DUPLIKAT', 'COPY', 'LEGALISIR', 'SALINAN', name='typedocfisikenum'), nullable=True),
    sa.Column('remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doc_detail_id'), 'doc_detail', ['id'], unique=False)
    op.create_table('memo',
    sa.Column('nomor_memo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('jenis_arsip', sa.Enum('ARSIP_HOLDING', 'ARSIP_AJB', name='jenisarsipenum'), nullable=True),
    sa.Column('doc_category', sa.Enum('MASUK', 'KELUAR', 'PINJAM', 'KEMBALI', 'MASUK_HOLD', 'HOLD', 'UNHOLD', name='documentcategoryenum'), nullable=True),
    sa.Column('doc_format_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('necessity', sa.Enum('KELUAR_KE_KONSUMEN', 'KELUAR_KE_BANK', 'PENGGABUNGAN', 'PROSES_AJB', 'CHECK_INTERNAL', 'PEMECAHAN', 'PERPANJANGAN', 'REVISI', 'PEMISAHAN', name='necessityenum'), nullable=True),
    sa.Column('attachment_memo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('est_return_date', sa.DateTime(), nullable=True),
    sa.Column('outgoing_to_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('outgoing_to_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('outgoing_doc_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['doc_format_id'], ['doc_format.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memo_id'), 'memo', ['id'], unique=False)
    op.create_table('doc_type_column',
    sa.Column('doc_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('column_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['column_type_id'], ['column_type.id'], ),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_type.id'], ),
    sa.PrimaryKeyConstraint('doc_type_id', 'column_type_id')
    )
    op.add_column('doc_type_archive', sa.Column('jenis_arsip', sa.Enum('ARSIP_HOLDING', 'ARSIP_AJB', name='jenisarsipenum'), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('doc_type_archive', 'jenis_arsip')
    op.drop_table('doc_type_column')
    op.drop_index(op.f('ix_memo_id'), table_name='memo')
    op.drop_table('memo')
    op.drop_index(op.f('ix_doc_detail_id'), table_name='doc_detail')
    op.drop_table('doc_detail')
    op.drop_index(op.f('ix_column_type_id'), table_name='column_type')
    op.drop_table('column_type')
    # ### end Alembic commands ###
